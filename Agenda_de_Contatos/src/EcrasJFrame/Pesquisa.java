/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EcrasJFrame;

import Classes.DadosAgenda;
import Classes.OperacoesNoBancoDeDados;
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 * @author Diana Freixo
 * Programa NetBeans IDE 8.0.2
 */
public class Pesquisa extends javax.swing.JFrame {

    
    Alterar enviaTexto;
    
    /**
     * Creates new form Pesquisa
     */
    public Pesquisa() {
        initComponents();
        
        //Define como o formulário será encerrado - fecha o formulário mas mantem o aplicativo em execução
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //Centralizar o formulário no ecrã
        //Point - representa o local no espaço de coordenadas x e y
        Point centro  = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        int largura = 800;
        int altura = 500;
        //coloca o formulário no centro do ecrã
        setBounds(centro.x - largura/2, centro.y - altura/2, 800, 500);
        
        //mudar a cor do limite da caixa de texto
        txtQtdItens.setBorder(new LineBorder(Color.WHITE, 1));
        //desabilita a edição do campo
        txtQtdItens.setEditable(false);
        //mudar a cor do formulário
        getContentPane().setBackground(Color.white);
        carregarItens();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtQtdItens = new javax.swing.JTextField();
        txtConsulta = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAgenda = new javax.swing.JTable();
        btnApagar = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pesquisa");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo.png"))); // NOI18N
        btnNovo.setMnemonic('N');
        btnNovo.setText("Novo");
        btnNovo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        jLabel1.setText("Digite algo para pesquisar:");

        txtQtdItens.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtConsulta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtConsulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConsultaKeyPressed(evt);
            }
        });

        tabelaAgenda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabelaAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Telefone", "Email", "Endereço", "Nascimento"
            }
        ));
        tabelaAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabelaAgendaMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAgenda);

        btnApagar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir_1.png"))); // NOI18N
        btnApagar.setMnemonic('A');
        btnApagar.setText("Apagar");
        btnApagar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        btnExportar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excel_1.png"))); // NOI18N
        btnExportar.setMnemonic('E');
        btnExportar.setText("Exportar");
        btnExportar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQtdItens, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnApagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtdItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApagar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExportar)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        //Ao carregar no botão Novo irá abrir o formulário Registo
        Registo abrirEcra = new Registo();
        abrirEcra.setVisible(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        
            //cria o objeto que vair passar os dados da lista para a tabela
            DefaultTableModel dados = (DefaultTableModel) tabelaAgenda.getModel();
        
        try {
            //seleciona o número da linha
            int selecionaNumeroLinha = tabelaAgenda.getSelectedRow();
            
            DadosAgenda objeto = new DadosAgenda();
            int id = Integer.parseInt(dados.getValueAt(selecionaNumeroLinha, 0).toString());
            objeto.setId(id);
            
            OperacoesNoBancoDeDados eliminarDados = new OperacoesNoBancoDeDados();
            eliminarDados.Eliminar(objeto);
            
            carregarItens();
             
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não há nehum registo selecionado!");
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportarActionPerformed

    private void txtConsultaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConsultaKeyPressed
        String nome = "%" + txtConsulta.getText() + "%";
        
        OperacoesNoBancoDeDados itens = new OperacoesNoBancoDeDados();
        
        ArrayList<DadosAgenda> itensLista = itens.FiltarDados(nome);
        
        //carregar dados na tabela
        DefaultTableModel dados = (DefaultTableModel) tabelaAgenda.getModel();
        //limpa dados da tabela
        dados.setNumRows(0);
        
        itensLista.stream().forEach((linha) -> {
            dados.addRow(new Object[] {
                linha.getId(),
                linha.getNome(),
                linha.getTelefone(),
                linha.getEndereco(),
                linha.getNascimento()
            });
        });
        contarLinhasTabela();
    }//GEN-LAST:event_txtConsultaKeyPressed

    private void tabelaAgendaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAgendaMouseReleased
        //se der um duplo click
        if(evt.getClickCount() == 2) {
            //cria o objeto que vair passar os dados da lista para a tabela
            DefaultTableModel model = (DefaultTableModel) tabelaAgenda.getModel();
            
            //Seleciona o número da linha
            int selecionaNumeroLinha = tabelaAgenda.getSelectedRow();
            
            if(enviaTexto == null) {
                
                enviaTexto = new Alterar();
                //quando der o duplo click quero que o formulário Alterar fique visível
                enviaTexto.setVisible(true);
                enviaTexto.receber(model.getValueAt(selecionaNumeroLinha, 0).toString(), //id
                        model.getValueAt(selecionaNumeroLinha, 1).toString(),            //nome
                        model.getValueAt(selecionaNumeroLinha, 2).toString(),           //telefone
                        model.getValueAt(selecionaNumeroLinha, 3).toString(),           //email
                        model.getValueAt(selecionaNumeroLinha, 4).toString(),           //endereço
                        model.getValueAt(selecionaNumeroLinha, 5).toString());          //nascimento
                
            }
            else {
                //passa uma constante
                enviaTexto.setState(Alterar.NORMAL);
                enviaTexto.setVisible(true);
                enviaTexto.receber(model.getValueAt(selecionaNumeroLinha, 0).toString(), //id
                        model.getValueAt(selecionaNumeroLinha, 1).toString(),            //nome
                        model.getValueAt(selecionaNumeroLinha, 2).toString(),           //telefone
                        model.getValueAt(selecionaNumeroLinha, 3).toString(),           //email
                        model.getValueAt(selecionaNumeroLinha, 4).toString(),           //endereço
                        model.getValueAt(selecionaNumeroLinha, 5).toString());
            }
        }
    }//GEN-LAST:event_tabelaAgendaMouseReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        carregarItens();
        
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pesquisa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaAgenda;
    private javax.swing.JTextField txtConsulta;
    private javax.swing.JTextField txtQtdItens;
    // End of variables declaration//GEN-END:variables

    
    
    //Método para carregar as informações na tabela
    public void carregarItens() {
        
        //instanciando para ter acesso à classe
        OperacoesNoBancoDeDados itens = new OperacoesNoBancoDeDados();
        
        ArrayList<DadosAgenda> itensLista = itens.listarItens();
        
        //Criando o objeto que vai passar os dados da lista para a tabela
        DefaultTableModel dados = (DefaultTableModel) tabelaAgenda.getModel();
        
        //limpar os dados da tabela
        dados.setNumRows(0);
        
        itensLista.stream().forEach((linha) -> {
            dados.addRow(new Object[] {
                linha.getId(),
                linha.getNome(),
                linha.getTelefone(),
                linha.getEmail(),
                linha.getEndereco(),
                linha.getNascimento()
            });
        });
        
        //para desabilitar o tamanho fixo das colunas
        tabelaAgenda.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        //ajustar a largura das colunas
        tabelaAgenda.getColumnModel().getColumn(0).setPreferredWidth(50); //id
        tabelaAgenda.getColumnModel().getColumn(1).setPreferredWidth(200); //nome
        tabelaAgenda.getColumnModel().getColumn(2).setPreferredWidth(150); //telefone
        tabelaAgenda.getColumnModel().getColumn(3).setPreferredWidth(200); //email
        tabelaAgenda.getColumnModel().getColumn(4).setPreferredWidth(200); //endereço
        tabelaAgenda.getColumnModel().getColumn(5).setPreferredWidth(150); //nascimento
    
        //aumentar a largura da linha
        tabelaAgenda.setRowHeight(20);
        
        //desabilitar a seleção da célula quando der um duplo clique
        tabelaAgenda.setDefaultEditor(Object.class, null);
        
        contarLinhasTabela();
    }
    
    //método para contar as linhas da tabela
    public void contarLinhasTabela() {
        int qtdLinhas = 0;
        
        qtdLinhas = tabelaAgenda.getRowCount();
        txtQtdItens.setText("Total de registos: " + qtdLinhas);
        
    }
}
